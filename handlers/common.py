from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

from auth.auth import generate_code, verify_code
from keyboards import kb_common
from mail import validate_email


class CommonState(StatesGroup):
    hello_reg = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≥–¥–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    input_email = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≥–¥–µ –≤–≤–æ–¥—è—Ç –ª–æ–≥–∏–Ω
    input_code = State()  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≥–¥–µ –≤–≤–æ–¥—è—Ç –∫–æ–¥


async def start(message: types.Message):
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥! –í–≤–µ–¥–∏ /info –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è",
        reply_markup=kb_common.main_menu,
    )


async def hello_registration(message: types.Message):
    chat_id = message.chat.id
    await message.reply("–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –ø–æ—á—Ç—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    await CommonState.input_email.set()


async def input_email_registration(message: types.Message, state: FSMContext):
    if not validate_email(message.text):
        await message.reply("–≠—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ—á—Ç–æ–π, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑")
        return
    await state.update_data(email=message.text)
    await generate_code(message.text)
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥")
    await CommonState.input_code.set()


async def input_code_registration(message: types.Message, state: FSMContext):
    data = await state.get_data()
    if not await verify_code(email=data.get("email"), code=message.text):
        await message.reply("–≠—Ç–æ –Ω–µ –≤–µ—Ä–Ω—ã–π –∫–æ–¥, –≤–≤–µ–¥–∏—Ç–µ –µ—â–µ —Ä–∞–∑")
        return
    await message.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!")
    await state.finish()


def register_handlers_common(dp: Dispatcher):
    dp.register_message_handler(
        hello_registration, Text(startswith="üÜò–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", ignore_case=True)
    )
    dp.register_message_handler(input_email_registration, state=CommonState.input_email)
    dp.register_message_handler(input_code_registration, state=CommonState.input_code)
    dp.register_message_handler(start)
