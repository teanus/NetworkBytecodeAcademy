from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup

from keyboards import kb_common, get_main_menu
from provider import db


class CommonState(StatesGroup):
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    get_group_schedule = State()


async def get_group(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –≥—Ä—É–ø–ø—ã.

    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –æ–Ω —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≥—Ä—É–ø–ø—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å",
        reply_markup=kb_common.back_menu,
    )
    await CommonState.get_group_schedule.set()


async def send_subject(message: types.Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã.

    –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ Finite State Machine (FSM) –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    """
    await message.answer(
        await db.get_weekly_schedule_by_group(message.text.lower()),
        parse_mode="Markdown",
    )


async def cancel_to_group(message: types.Message, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø—Ä–æ—Å–∞ –≥—Ä—É–ø–ø—ã.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –≥—Ä—É–ø–ø—ã.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –°–æ—Å—Ç–æ—è–Ω–∏–µ Finite State Machine (FSM) –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
    """
    await message.answer(
        "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥!", reply_markup=await get_main_menu(message.from_user.id)
    )
    await state.finish()


def register_handlers_common(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.

    Args:
        dp (Dispatcher): –î–∏—Å–ø–µ—Ç—á–µ—Ä aiogram –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    """
    dp.register_message_handler(
        get_group, Text(["üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "schedule"], ignore_case=True)
    )
    dp.register_message_handler(
        cancel_to_group,
        Text(["‚óÄ–æ—Ç–º–µ–Ω–∞", "–æ—Ç–º–µ–Ω–∞", "cancel", "back"], ignore_case=True),
        state=CommonState.get_group_schedule,
    )
    dp.register_message_handler(send_subject, state=CommonState.get_group_schedule)
