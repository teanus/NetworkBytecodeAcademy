from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text

from admin_code import ADMIN_CODE
from keyboards import get_main_menu
from super_admin import add_admin, get_admin, get_state


async def start(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º. –ï—Å–ª–∏ –¥–∞,
    –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.
    –ï—Å–ª–∏ –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    is_admin = await get_admin(message.from_user.id)
    menu = await get_main_menu(message.from_user.id)
    text = (
        '–¢—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" –∏ –∏–∑–º–µ–Ω–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
        if is_admin
        else "–ü—Ä–∏–≤–µ—Ç –¥—Ä—É–≥! –í–≤–µ–¥–∏ /info –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è"
    )
    await message.answer(text, reply_markup=menu)


async def code_admin(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏, –µ—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if await get_state():
        await add_admin(message.from_user.id)
        await message.reply("–í—ã —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é")


async def id_cmd(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    chat_id = message.chat.id
    await message.reply(f"–í–∞—à id: {chat_id}")


async def info_cmd(message: types.Message) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await message.reply("–ë–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è Network&Bytecode academy. ")


def register_handlers_other(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥.

    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –æ–±—â–∏—Ö –∫–æ–º–∞–Ω–¥.

    Args:
        dp (Dispatcher): –î–∏—Å–ø–µ—Ç—á–µ—Ä aiogram –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.
    """
    dp.register_message_handler(code_admin, Text(equals=ADMIN_CODE))
    dp.register_message_handler(
        id_cmd, Text(startswith=["üÜî–∞–π–¥–∏", "/id"], ignore_case=True)
    )
    dp.register_message_handler(
        info_cmd, Text(startswith=["üÜò–∏–Ω—Ñ–æ", "/info"], ignore_case=True)
    )
    dp.register_message_handler(start)
